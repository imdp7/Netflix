{"version":3,"sources":["axios.js","Row.js","requests.js","Banner.js","Nav.js","App.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","className","classNam","map","movie","src","poster_path","backdrop_path","alt","name","onClick","movieTrailer","then","url","urlParams","URLSearchParams","URL","search","catch","err","console","log","handleClick","id","videoId","opts","height","width","playerVars","autoplay","API_KEY","requests","fetchTrending","fetchPopular","fetchAdult","fetchDrama","fetchCurrentYear","fetchActor","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundImage","backgroundAttachment","backgroundRepeat","backgroundSize","backgroundPosition","backgroundColor","top","bottom","opacity","original_name","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.66277345.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst instance = axios.create({\r\n    baseURL:\"https://api.themoviedb.org/3/\",\r\n});\r\n\r\nexport default instance;","import React, {useState,useEffect} from 'react';\r\nimport axios from './axios';\r\nimport './row.css'\r\nimport Youtube from 'react-youtube';\r\nimport movieTrailer from 'movie-trailer'\r\n\r\nconst base_url=\"https://image.tmdb.org/t/p/original/\" \r\n\r\nfunction Row({title ,fetchUrl ,isLargeRow}) {\r\n    const [movies, setMovies]= useState([]); \r\n    const [trailerUrl, setTrailerUrl]= useState(\"\");\r\n\r\n    useEffect(() =>{\r\n        async function fetchData() {\r\n            const request = await axios.get(fetchUrl);\r\n            setMovies(request.data.results);\r\n            return request;\r\n        }\r\n        fetchData();\r\n    },[fetchUrl]);\r\n\r\n    const opts = {\r\n        height:\"390\",\r\n        width:\"100%\",\r\n        playerVars: {\r\n            autoplay: 1,\r\n\r\n        },\r\n    };\r\n    const handleClick = (movie) => {\r\n        if (trailerUrl){\r\n            setTrailerUrl('');\r\n        }\r\n        else {\r\n            movieTrailer(movie?.name || \"\")\r\n            .then((url) => {\r\n               const urlParams = new URLSearchParams(new URL (url).search);\r\n               setTrailerUrl(urlParams.get('v'));\r\n            })\r\n            .catch((err) => console.log(err));\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"row\">\r\n            <h2 classNam=\"row__title\">{title}</h2>\r\n             <div className={\"row__posters\"}>\r\n                {movies.map(movie => (\r\n                    \r\n                    <img className={`row__poster  ${isLargeRow && \"row__posterLarge\"}`} \r\n                    key={movie.id} src={`${base_url}${isLargeRow ? movie.poster_path: movie.backdrop_path}`} \r\n                    alt={movie.name}\r\n                    onClick={() => handleClick(movie)}\r\n                    />\r\n                ))}\r\n            </div>\r\n           {trailerUrl && <Youtube videoId={trailerUrl} opts={opts} />}\r\n        </div>\r\n    )\r\n    }\r\nexport default Row\r\n","const API_KEY = \"99b96f6f6db95c35d56bae850645b829\";\r\n const  requests =  {\r\n    fetchTrending: `/trending/all/day?api_key=${API_KEY}&language=en-US`,\r\n    fetchPopular:`/discover/movie?api_key=${API_KEY}&language=en-US&sort_by=popularity.desc&include_adult=true&include_video=true&page=1`,\r\n    fetchAdult:`/discover/movie?api_key=${API_KEY}&certification_country=US&certification=R`,\r\n    fetchDrama: `/discover/movie?api_key=${API_KEY}&with_genres=18`,\r\n    fetchCurrentYear: `/discover/movie?api_key=${API_KEY}&with_genres=18&primary_release_year=2014`,\r\n    fetchActor: `/discover/movie?api_key=${API_KEY}&with_genres=878`,\r\n}\r\n\r\nexport default requests;\r\n","import React,{useState, useEffect} from 'react'\r\nimport axios from './axios'\r\nimport requests from './requests'\r\nimport './Banner.css'\r\n\r\nconst base_url=\"https://image.tmdb.org/t/p/original/\" \r\nfunction Banner() {\r\n    const [movie,setMovie] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData()  {\r\n            const request = await axios.get(requests.fetchTrending);\r\n            setMovie(\r\n                request.data.results[\r\n                    Math.floor(Math.random() * request.data.results.length - 1)\r\n                ]\r\n            );\r\n            return request;\r\n        }\r\n        fetchData();\r\n    },[]);\r\n\r\n    function truncate(str,n){\r\n        return str?.length > n ? str.substr(0, n-1) + \"...\": str;\r\n    } \r\n\r\n    return (\r\n        <header className=\"banner\"\r\n        style={{ \r\n            // backgroundSize:\"100% 100%\",\r\n            backgroundImage:`url(\"${base_url}${movie?.backdrop_path}\")`,\r\n            // backgroundPosition: \"0 top\",\r\n             backgroundAttachment: \"fixed\",\r\n             backgroundRepeat: 'no-repeat',\r\n            // zIndex:'-2',\r\n            backgroundSize: \"100% 100%\",\r\n            backgroundPosition: \"0 top\",\r\n            //backgroundRepeat: \"repeat-x\",\r\n            backgroundColor: \"transparent\",\r\n            width: \"100%\",\r\n            height: \"43.5rem\",\r\n            top: \"auto\",\r\n            bottom: \"-1px\",\r\n            opacity: \"0.87\",\r\n        }}>\r\n             <div className=\"banner__contents\">\r\n                <h1 className=\"banner__title\">\r\n                 {movie?.title || movie?.name || movie?.original_name}\r\n                </h1>\r\n                <div className=\"banner__buttons\">\r\n                <button className=\"banner__button\">Play</button>\r\n                <button className=\"banner__button\">My List</button> \r\n                </div>\r\n                <h1 className=\"banner__description\">{truncate(movie?.overview,350)}</h1>\r\n             </div>\r\n             <div className=\"banner--fadebottom\"/>\r\n\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Banner\r\n","import React,{useState,useEffect} from 'react'\r\nimport './Nav.css'\r\n\r\nfunction Nav() {\r\n    const [show,handleShow] = useState(false);\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\",() =>{\r\n            if(window.scrollY>100){\r\n                handleShow(true);\r\n            } else handleShow(false);\r\n        });\r\n        return() => {\r\n            window.removeEventListener(\"scroll\");\r\n        }\r\n    },[]);\r\n\r\n    return (\r\n        <div className={`nav ${show && \"nav__black\"}`}>\r\n            <img\r\n              className=\"nav__logo\"\r\n              src=\"https://upload.wikimedia.org/wikipedia/commons/0/0f/Logo_Netflix.png\"\r\n              alt=\"Netflix Logo\"\r\n              />\r\n              <img \r\n              className=\"user__logo\"\r\n              src=\"https://pbs.twimg.com/profile_images/1240119990411550720/hBEe3tdn_400x400.png\"\r\n              alt=\"User\"\r\n              />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import React from 'react';\nimport './App.css';\nimport Row from './Row';\nimport requests from './requests';\nimport Banner from './Banner';\nimport Nav from './Nav';\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav/>\n      <Banner/>\n     <Row title=\"Netflix Originals\" \n       fetchUrl={requests.fetchTrending}\n       isLargeRow = {true}\n     />\n     <Row title=\"Popular Movies\" fetchUrl={requests.fetchPopular}/>\n     <Row title=\"Adult Movies\" fetchUrl={requests.fetchAdult}/>\n     <Row title=\"Drama Movies\" fetchUrl={requests.fetchDrama}/>\n     <Row title=\"This Year Movies\" fetchUrl={requests.fetchCurrentYear}/>\n     <Row title=\"Recommended Movies\" fetchUrl={requests.fetchActor}/>\n     \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}